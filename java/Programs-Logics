package Arrays;
import java.util.*;

public class intersectionarray {
    public static void main(String[] args) {
        int[] arr1 = {1, 2, 3, 4, 5};
        int[] arr2 = {3, 4, 5, 6, 7};
        int[] result = findintersectionarray(arr1, arr2);
        System.out.print(Arrays.toString(result));
    }

    public static int[] findintersectionarray(int[] arr1, int[] arr2) {
        HashSet<Integer> set = new HashSet<>();                      // creating a HashSet to store unique Values in var Set
        int[] temp = new int[Math.min(arr1.length, arr2.length)];                  // creating a temp variable array with a formula 
        int index = 0;    //index is for placing the values

        for (int num : arr1) {
            set.add(num);
        }

        for (int num : arr2) {
            if (set.contains(num)) {
                temp[index++] = num;
                set.remove(num);
            }
        }

        int[] result = new int[index];
        System.arraycopy(temp, 0, result, 0, index);       //Using  System.arraycopy  to transfer from One array(temp) to other array (result)
        return result;
    }
}

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2. How to FInd the Kth Largest and Kth Smallest element / FInd the Second Largest Number and Second Smallest Number/ find the Duplicates and find the Kth Numbers

i) By Using Arrays.sort fn

import java.util.Arrays;

public class KthElements {
    public static void main(String[] args) {
        int[] arr = {12, 3, 5, 7, 19, 4};
        int k = 2; // Example: 2nd smallest and 2nd largest  // replace with it 

        Arrays.sort(arr); // Sort the array       {3,4,5,7,12,19}

        int kthSmallest = arr[k - 1];
        int kthLargest = arr[arr.length - k];

        System.out.println(k + "th Smallest element is " + kthSmallest);
        System.out.println(k + "th Largest element is " + kthLargest);
    }
}

ii) Without Sorting, By Using For Loop 
-------------------------------------------------------------------------------------------------------
public static void findSecondMinAndMax(int[] arr) {
    int firstMin = Integer.MAX_VALUE, secondMin = Integer.MAX_VALUE;
    int firstMax = Integer.MIN_VALUE, secondMax = Integer.MIN_VALUE;

    for (int num : arr) {
        // For smallest
        if (num < firstMin) {
            secondMin = firstMin;
            firstMin = num;
        } else if (num < secondMin && num != firstMin) {
            secondMin = num;
        }

        // For largest
        if (num > firstMax) {
            secondMax = firstMax;
            firstMax = num;
        } else if (num > secondMax && num != firstMax) {
            secondMax = num;
        }
    }

    System.out.println("Second Smallest: " + (secondMin == Integer.MAX_VALUE ? "Not found" : secondMin));
    System.out.println("Second Largest: " + (secondMax == Integer.MIN_VALUE ? "Not found" : secondMax));
}
