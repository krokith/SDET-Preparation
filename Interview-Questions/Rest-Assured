1. What are the HTTP Methods you use in Rest Assured?

ðŸ‘‰ Common methods:
GET â€“ fetch data
POST â€“ create new resource
PUT â€“ update/replace resource
PATCH â€“ partial update
DELETE â€“ remove resource
given().when().get("/users").then().statusCode(200);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
2. What are important HTTP Status Codes to know?

200 â€“ OK
201 â€“ Created
204 â€“ No Content
400 â€“ Bad Request
401 â€“ Unauthorized
403 â€“ Forbidden
404 â€“ Not Found
500 â€“ Internal Server Error
then().statusCode(200);
---------------------------------------------------------------------------------------------------------------------------------------------------------------
3. How do you parse JSON in Rest Assured?

âœ… Three main ways:

JsonPath
Deserialization into POJO
Response.asString() + Json libraries
String name = response.jsonPath().getString("data[0].name");
---------------------------------------------------------------------------------------------------------------------------------------------------------------

4. What is Serialization & Deserialization?
Serialization â†’ Java object â†’ JSON
Deserialization â†’ JSON â†’ Java object
// Deserialization
User user = response.as(User.class);
// Serialization
given().body(user).post("/users");
---------------------------------------------------------------------------------------------------------------------------------------------------------------

5. How do you handle Authentication & Authorization?

Basic Auth â†’ .auth().basic("user","pass")

OAuth2 â†’ .auth().oauth2("token")

Bearer Token â†’ .header("Authorization", "Bearer <token>")
---------------------------------------------------------------------------------------------------------------------------------------------------------------

6. How do you validate Response Body?
given().when().get("/users")
.then().body("data[0].email", equalTo("test@example.com"));
---------------------------------------------------------------------------------------------------------------------------------------------------------------

7. How do you handle Query Params and Path Params?
// Path param
given().pathParam("id", 2).get("/users/{id}");

// Query param
given().queryParam("page", 2).get("/users");
---------------------------------------------------------------------------------------------------------------------------------------------------------------

8. How do you validate Headers and Cookies?
response.getHeader("Content-Type");
response.getCookie("session_id");
---------------------------------------------------------------------------------------------------------------------------------------------------------------

9. How do you log requests and responses?
given().log().all().when().get("/users").then().log().all();

---------------------------------------------------------------------------------------------------------------------------------------------------------------
10. How do you handle Request/Response Specification?

âœ… Avoid duplication with RequestSpecBuilder & ResponseSpecBuilder.

RequestSpecification reqSpec = new RequestSpecBuilder()
        .setBaseUri("https://api.example.com")
        .setContentType(ContentType.JSON)
        .build();

ResponseSpecification resSpec = new ResponseSpecBuilder()
        .expectStatusCode(200)
        .build();

given().spec(reqSpec).when().get("/users").then().spec(resSpec);
---------------------------------------------------------------------------------------------------------------------------------------------------------------

11. How do you perform JSON Schema Validation in Rest Assured? âœ… (Senior-Level)

ðŸ‘‰ Ensures response matches a predefined schema.

given().when().get("/users")
.then().assertThat()
.body(matchesJsonSchemaInClasspath("userSchema.json"));
---------------------------------------------------------------------------------------------------------------------------------------------------------------

12. How do you handle Dynamic Response Values (like IDs, tokens)? âœ… (Tricky Question)

ðŸ‘‰ Capture values at runtime and reuse in further requests.

String userId = given().when().post("/users")
.then().extract().path("id");

given().pathParam("id", userId).when().get("/users/{id}").then().statusCode(200);


âœ… Now you have 10 core + 2 advanced questions that cover both basics & senior-level challenges.

ðŸ‘‰ Do you also want me to make a one-page cheat sheet (all these questions + answers in crisp bullet points) so you can revise before interviews?
